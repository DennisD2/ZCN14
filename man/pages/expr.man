NAME
	expr - evaluate expressions

SYNOPSIS
	expr expression

DESCRIPTION
	expr evaluates an expression, acting like a simple calculator.
	The individual parts of the expression must be separated by
	spaces, as in `expr 2 + 2'. 32-bit signed integers are used
	for the maths, allowing for (whole) numbers in the range
	-2147483648 to 2147483647.

	The supported operators are + - * / % and brackets, with the
	usual precedence.

BUGS
	As with the original C version, if an expression starts with a
	bracket but doesn't end with one, expr gives a syntax error.
	For example, `expr ( 1 + 2 ) * 3' doesn't work. You can work
	around this bug by rearranging the expression (in this case,
	`3 * ( 1 + 2 )' would work), or by prefixing it with `0 +'.

AUTHOR
	Erik Baalbergen wrote the original C version in 1987.
	The cut-down Z80 m/c port was by Russell Marks.

SEE ALSO
	bbcbas
